# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  - master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GO111MODULE: 'on' # Enable go module
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  PROJECT_REPO: '$(build.repository.name)'
  BUILD_VERSION: '$(Build.BuildNumber)'
  BUILD_REVISION: '$(Build.SourceVersion)'
  BUILD_TIME: '$(date +%Y-%m-%dT%H:%M:%S%z)'
  CGO_ENABLED: '0'
steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'
- script: |
    go mod download
    go test ./...
    go build --installsuffix cgo -ldflags="-s -w -X github.com/$(PROJECT_REPO)/cmd.Version=$(BUILD_VERSION) -X github.com/$(PROJECT_REPO)/cmd.Revision=$(BUILD_REVISION) -X github.com/$(PROJECT_REPO)/cmd.Time=$(BUILD_TIME)" main.go
    docker build -t '$(registry-id)/base-images/http-server:$(Build.BuildNumber)' .
    docker tag '$(registry-id)/base-images/http-server:$(Build.BuildNumber)' '$(registry-id)/base-images/http-server:latest'
    docker login -u '$(vps-user)' -p '$(vps-password)' '$(registry-id)'
    docker push '$(registry-id)/base-images/http-server'
  workingDirectory: '$(modulePath)'
  displayName: 'Deps, test and build'
